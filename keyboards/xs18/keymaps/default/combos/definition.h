// Copyright 2023 QMK
// SPDX-License-Identifier: GPL-2.0-or-later

#include "L0.h"
#include "L1.h"
#include "L2.h"

// Combos definition
enum combos {
  LTRMI0_COMBO,
  LTRM0_COMBO,
  LTMI0_COMBO,
  LTRI0_COMBO,
  LHRMI0_COMBO,
  LHRM0_COMBO,
  LHMI0_COMBO,
  LHRI0_COMBO,
  RTIMR0_COMBO,
  RTIM0_COMBO,
  RTMR0_COMBO,
  RTIR0_COMBO,
  RHIMR0_COMBO,
  RHIM0_COMBO,
  RHMR0_COMBO,
  RHIR0_COMBO,
  LTRMI1_COMBO,
  RTIMR1_COMBO,
  LEFT_ANGLE_BRACKET_COMBO,
  RIGHT_ANGLE_BRACKET_COMBO,
  LEFT_BRACKET_COMBO,
  RIGHT_BRACKET_COMBO,
  LEFT_CURLY_BRACE_COMBO,
  RIGHT_CURLY_BRACE_COMBO,
  LEFT_PAREN_COMBO,
  RIGHT_PAREN_COMBO,
  LTRMI2_COMBO,
  RTIMR2_COMBO,
  F4_COMBO,
  F5_COMBO,
  F6_COMBO,
  F7_COMBO,
  F8_COMBO,
  F9_COMBO,
  N3_COMBO,
  N4_COMBO,
  N5_COMBO,
  N6_COMBO,
  COMBO_COUNT
};
uint16_t COMBO_LEN = COMBO_COUNT;

combo_t key_combos[COMBO_COUNT] = {
  // Left Alpha
  [LTRMI0_COMBO] = COMBO(LTR0_LTM0_LTI0_combo, KC_ESCAPE),
  [LTRM0_COMBO] = COMBO(LTR0_LTM0_combo, KC_X),
  [LTMI0_COMBO] = COMBO(LTM0_LTI0_combo, KC_V),
  [LTRI0_COMBO] = COMBO(LTR0_LTI0_combo, KC_J),
  [LHRMI0_COMBO] = COMBO(LHR0_LHM0_LHI0_combo, KC_W),
  [LHRM0_COMBO] = COMBO(LHR0_LHM0_combo, KC_F),
  [LHMI0_COMBO] = COMBO(LHM0_LHI0_combo, KC_U),
  [LHRI0_COMBO] = COMBO(LHR0_LHI0_combo, KC_P),
  // Right Alpha
  [RTIMR0_COMBO] = COMBO(RTI0_RTM0_RTR0_combo, KC_BACKSPACE),
  [RTIM0_COMBO] = COMBO(RTI0_RTM0_combo, KC_K),
  [RTMR0_COMBO] = COMBO(RTM0_RTR0_combo, KC_Q),
  [RTIR0_COMBO] = COMBO(RTI0_RTR0_combo, KC_Z),
  [RHIMR0_COMBO] = COMBO(RHI0_RHM0_RHR0_combo, KC_B),
  [RHIM0_COMBO] = COMBO(RHI0_RHM0_combo, KC_Y),
  [RHMR0_COMBO] = COMBO(RHM0_RHR0_combo, KC_G),
  [RHIR0_COMBO] = COMBO(RHI0_RHR0_combo, KC_M),
  // Symbols
  [LTRMI1_COMBO] = COMBO(LTR1_LTM1_LTI1_combo, KC_ESCAPE),
  [LEFT_ANGLE_BRACKET_COMBO] = COMBO(LTR1_LTM1_combo, KC_LEFT_ANGLE_BRACKET),
  [RIGHT_ANGLE_BRACKET_COMBO] = COMBO(LTM1_LTI1_combo, KC_RIGHT_ANGLE_BRACKET),
  [LEFT_BRACKET_COMBO] = COMBO(LHR1_LHM1_combo, KC_LEFT_BRACKET),
  [RIGHT_BRACKET_COMBO] = COMBO(LHM1_LHI1_combo, KC_RIGHT_BRACKET),
  [RTIMR1_COMBO] = COMBO(RTI1_RTM1_RTR1_combo, KC_BACKSPACE),
  [LEFT_CURLY_BRACE_COMBO] = COMBO(RTI1_RTM1_combo, KC_LEFT_CURLY_BRACE),
  [RIGHT_CURLY_BRACE_COMBO] = COMBO(RTM1_RTR1_combo, KC_RIGHT_CURLY_BRACE),
  [LEFT_PAREN_COMBO] = COMBO(RHI1_RHM1_combo, KC_LEFT_PAREN),
  [RIGHT_PAREN_COMBO] = COMBO(RHM1_RHR1_combo, KC_RIGHT_PAREN),
  // Fn
  [LTRMI2_COMBO] = COMBO(LTR2_LTM2_LTI2_combo, KC_ESCAPE),
  [F4_COMBO] = COMBO(LTR2_LTM2_combo, KC_F4),
  [F5_COMBO] = COMBO(LTM2_LTI2_combo, KC_F5),
  [F6_COMBO] = COMBO(LTR2_LTI2_combo, KC_F6),
  [F7_COMBO] = COMBO(LHR2_LHM2_combo, KC_F7),
  [F8_COMBO] = COMBO(LHM2_LHI2_combo, KC_F8),
  [F9_COMBO] = COMBO(LHR2_LHI2_combo, KC_F9),
  // Nums
  [RTIMR2_COMBO] = COMBO(RTI2_RTM2_RTR2_combo, KC_BACKSPACE),
  [N5_COMBO] = COMBO(RTI2_RTM2_combo, KC_5),
  [N6_COMBO] = COMBO(RTM2_RTR2_combo, KC_6),
  [N3_COMBO] = COMBO(RHI2_RHM2_combo, KC_3),
  [N4_COMBO] = COMBO(RHM2_RHR2_combo, KC_4),
};
